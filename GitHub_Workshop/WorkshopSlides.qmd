---
title: "git, GitHub and R Studio"
subtitle: "UW R-Ladies"
date: "14 April 2023"
format: 
  revealjs: 
    theme: solarized
editor: visual
---

### What is 'Version Control?'

::: columns
::: {.column width="50%"}
::: fragment
-   A system to keep track of changes you make to a file, and revert to a previous version if something goes wrong
:::

::: fragment
-   each of these 'save points' is called a "commit"
:::
:::

::: {.column width="50%"}
::: fragment
[![](presentationImgs/climbingImage.png){fig-alt="Climber on a wall" width="200"}](https://www.vdiffclimbing.com/trad-gear/)
:::
:::
:::

------------------------------------------------------------------------

::: columns
::: {.column width="60%"}
[![](presentationImgs/falling.png){fig-alt="Climbers falling on a wall" fig-align="left" width="592"}](https://www.vdiffclimbing.com/trad-gear/)
:::

::: {.column width="40%"}
::: fragment
[![](presentationImgs/soloing.jpg)](https://www.redbull.com/al-sq/theredbulletin/marc-andre-leclerc-the-alpinist)
:::
:::
:::

------------------------------------------------------------------------

## How do you use version control?

![](presentationImgs/git_logo.png){width="116" height="48"} one of the most common version control software programs, and is *free and open source*!

::: fragment
::: columns
::: {.column width="40%"}
-   git adds a ".git" folder to a **repository** and records your commits/adds there
:::

::: {.column width="60%"}
![](presentationImgs/gitRepoImage.png){width="500"}
:::
:::
:::

::: fragment
-   git does not track changes automatically. You need to make commits using the **command line** or a **git client** GUI
:::

##
![](presentationImgs/gitTree.png){width="500"}


## 
![](presentationImgs/github-mark.png){width="80"} git becomes even more useful when you connect your **local** git repos to a **remote** git service such as GitHub

::: incremental
-   A **remote** version of your repo is saved online, which is a great backup!
-  Really easy to work across different computers!
-   Open Science/Code sharing!
:::

## What does a git/GitHub workflow look like?

::: fragment
-   When you begin work for the day, you **pull** from the remote repo to make sure your **local** version is up to date
:::

::: fragment
-   Make commits in the **local** repo as you work
    -   can use the command line or a git client (e.g. GitKraken or Sourcetree), but you can also use R Studio!
:::

::: fragment
-   At the end of the day, **push** to the **remote** repo, which sends your changes (and the git record of your commits) online
:::

## Important Random Info {.smaller}

::: incremental 

-   All your repos are public on the free version of GitHub. People won't be able to push or pull without your permission, but they will be able to see your code!
-   git is typically used for code, but can work for other files too! (Word, Overleaf, etc.)
-   Don't store data in git repos
    -   takes up a lot of room (there are size limits on GitHub)

    -   you typically aren't changing raw data (hopefully!), so it's not really useful
    
    -    you can still store data in a repo, but put it in a folder that included in the ".gitignore"
:::

## When would you use version control?

-   to keep track of changes that *you* make in your files
    -   you have a record of when and why you made changes to a file
    -   you can revert to a previous version of a file quite easily! (and if you have informative commit messages, it's easy to find the version you need!)

<!-- ------------------------------------------------------------------------ -->

<!-- -   why would a person want to use version control? -->
<!--     -   keep track of changes for yourself, esp. across multiple computers -->
<!--     -   keep track of and share changes on collaborative projects -->
<!-- -   version control is typically used for code (*not* data), but can also be used for writing, presentations, etc. -->
